# Automatically builds a Release Notes Draft as PRs get merged into develop
# Configure the format of the release notes @ /.github/release-drafter.yml

name: Release Drafter

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - develop
  # TODO: remove the pull-request event, it's only for debugging this workflow
  pull_request:
    branches: 
      - develop

jobs:
  update_release_draft:
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@06d4616a80cd7c09ea3cf12214165ad6c1859e67 # https://github.com/release-drafter/release-drafter/commits/v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  rust_binaries:
    strategy:
      matrix:
        include: 
          - os: macos-latest
            target: x86_64-apple-darwin
            platform_name: macos
            suffix: ''
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform_name: win64
            suffix: .exe
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform_name: linux
            suffix: ''
    runs-on: ${{ matrix.os }}

    steps:
      # - name: 'Debug dependencies Linux'
      #   if: runner.os == 'Linux'
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install tree
      # - name: 'Debug dependencies macOS'
      #   if: runner.os == 'macOS'
      #   run: |
      #     brew install tree
      - name: 'Set CARGO_HOME and RUSTUP_HOME'
        run: | 
          echo "RUSTUP_HOME=$HOME/.rustup" >> $GITHUB_ENV
          echo "CARGO_HOME=$HOME/.cargo" >> $GITHUB_ENV
      - name: 'Checkout source'
        uses: actions/checkout@28c7f3d2b5162b5ddd3dfd9a45aa55eaf396478b # https://github.com/actions/checkout/commits/v2
      - name: 'Cache cargo registry'
        uses: actions/cache@d1255ad9362389eac595a9ae406b8e8cb3331f16 # https://github.com/actions/cache/commits/v2
        with:
          path: |
            ${{ env.CARGO_HOME }}/registry
            ${{ env.CARGO_HOME }}/git
            target
          key: '${{ runner.os }}-cargo-${{ hashFiles(''**/Cargo.lock'') }}-v4'
      - name: 'Rust toolchain'
        uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # https://github.com/actions-rs/toolchain/commits/v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: 'Build'
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # https://github.com/actions-rs/cargo/commits/v1
        with:
          command: build
          args: --workspace --release --target=${{ matrix.target }}
      - name: 'Flush Cargo cache to disk on macOS'
        if: runner.os == 'macOS'
        run: sudo /usr/sbin/purge
      - name: 'Package binary'
        env:
          ARCHIVE_NAME: optic_diff-${{ matrix.platform_name }} # TODO: include version number?
          FILE_NAME: optic_diff${{ matrix.suffix }}
        run: |
          mkdir -p build/$ARCHIVE_NAME
          mkdir dist
          cp target/${{ matrix.target }}/release/$FILE_NAME build/$ARCHIVE_NAME/$FILE_NAME
          tar -C build -czvf dist/$ARCHIVE_NAME.tar.gz $ARCHIVE_NAME
      - name: 'Debug archives'
        env:
          ARCHIVE_NAME: optic_diff-${{ matrix.platform_name }} # TODO: include version number?
        run: |
          ls -lsa dist
          ls -lsa build
          tar -xzvf dist/$ARCHIVE_NAME.tar.gz -C dist
          ls -lsa dist